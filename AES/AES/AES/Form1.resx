<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAGBgAAQEACADIBgAAJgAAABgYAAABACAAiAkAAO4GAAAoAAAAGAAAADAAAAABAAgAAAAAAEAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHFNOgAzNHYAQTRtAFc+ZQAnQnsAKUJ5ACtDeQApQnoAKEJ7AChN
        fQBpT0UAXFNhAEV3fwCEUC8Ak1YpAJdXKACOVD0Ak1g8AJVYPQCeYTkAoWQ1AKBkPQCxbjoAsnA8AJhc
        RQCTXVsAnWRGAJ1jUgCmaEIAsXJLALh6TgC1e1sAvoxUAL+OVgC3jlwAuI9cAKmHbACximAAvIxoALiO
        bACmiHcApot/AK6QewC+lHEAu5d0AL+YfQDDhlAAyZFYAMuYbADHnX4A67huADY2hgA5OYcAOj6PAA5D
        iwAERZMAFkGRAD5BkQAFQ6gADUWtAAJKvAAASr4AAUu+AABLvwBCQIEAQkCDAENBhABFQ4YAQ0OKAEVD
        igBHRYsAQ0OPAElGigBBQ5EAQkKQAEJDkQBJR5EAQ0abAENHmwBGSZwAT1yxAG5oqwBtaa4AbXu7AABN
        wAAAecMAAHHlAABx5wBPY8wASmHUAEpj1QBpdM8AaXfUAFp9/QCKdZsAdoK8AH2HugAAj8sAAJDLAACR
        zAAAk8wAAI7eAACQ4QAAleYAAJXnAHuI1ABfgf8AZ4b/AGyK/wBwjvsAcIz/AG6Q/wBwkP8AeZj/AKiM
        gQCtmJkAvqWbAJ6GpQCCj7oAh5e6AIGQvgCKm7oAjJ26AIiZvgCOnrwAnZSxAKqcrQCim7wApZ6+ALqm
        ogC7pqIAvqmiALyqpQC7qasAv6upAKmkvgC2prEAtam1ALetvAC/r7oAwJuBAM+khADPqYwA3raHANy3
        jgDIppwA1K2UANq6kQDUuJ4A2LicAMmvoQDDrq4A1LyvANW/rwDIs7MAxbK8AN7AnQDqx5UA78yVAObD
        oACCjMsAgZDdAIGR3QCCkd4AmJ3QAKGdwACupsIAt6/EALavxwC/scAAtrHMALqzzQCkpdEApabUALO1
        3QCzut8AgpPhAIyZ4gCBnf8Aj6LvAJGk7wCKoPcAlKjwAJep8ACbq/AAnK3wAJGq/wCesf8ApavhAKuy
        5wCpte8AvL7qAKK3/wCkuv8Aprv/AKm8/wCqvv8AxbbCAK/D/wCxwv8As8T/ALvF+QC2yP8AuMn/ALzN
        /wC/zf8A2cjHANDJ3gDJ2NoAxNH/ANXd+wDU4f8A2OL/ANjj/wDf6/8A5/D/AOzz/wB7QCgA08jTAMnY
        2gD24sIA9ePPAPjl0wD26NgAxMvvAN7W4gDBy/0AwM//AMXO/wDE0v8AyNP/AMnW/wDO3P8A0dr8ANXg
        /wDY5P8A2+X/AN7o/wDv5+sA4Of8AOTv/wDs9P8A/fTwAPX8/wBtNykAlgAAAAEAAACHlo2VgACkACxk
        TACQAQAAIEsoApYAAACMAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+OQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAFVYZjcAAAAAAAAAAAAAAAAAAAAAAAAAQFdoZAUAAAAAAAAAAAAAAAAAAAAA
        AAA/WGhlCQAAAAAAAAAAAAAAAAAAAAAAAD1YaWMIAAAAAFpbXmtsbW9uXVNSXFkAADtnYgYAAAAAAFtR
        cHFyu8YfMJCgMRsMPFY4BwAAAAAAAABUs7OzXxgznp2WlZQvDQoAAAAAAAAAAAB5tjY1FixBQkOFgoQt
        FwAAAAAAAAAAAAB8wbwaJ3WGi6mrqIorIg4AAAAAAAAAAAB9yb8RLoeMrK+9rYhzJA8AAAAAAAAAAAAA
        zkwSjURGSEo6paYqIxAAAAAAAAAAAAB70tMTMpnP0MC+roEpJA8AAAAAAAAAAAB6yrAcJ5ebqqeAfn8l
        IQ4AAAAAAAAAAAB4y1BNHY9JR0VFiXQmFQAAAAAAAAAAAAB3w9TZkh6RmpiDnygUAQAAAAAAAAAAAABh
        xM3W1ZwZIJOOHtoLAAAAAAAAAAAAAABgxU5QT05OS3YEAwAAAAAAAAAAAAAAAAChwtLY18zIx7I0AAAA
        AAAAAAAAAAAAAKNqtLe5uri1pAIAAAAAAAAAAAAAAAAAAKOiorGisaKiAAAAAAAAAAAAAAAAAAAAAP//
        /wD///8A////AP//5wD//8MA//+DAP//BwD//g8AAAYfAAAAPwCAAP8AgAH/AIAA/wCAAP8AwAD/AIAA
        /wCAAP8AgAH/AIAB/wCAA/8AgA//AIAf/wAAP/8AAP//ACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAcAAAAIAAAABAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAFAAAAEAAAABwAAAAcAAAAEAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAATAAAALAAAAFAAAABAAAAAKQAA
        ABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAABAAAABMAAAAvElzR/hJCmuIAAABeAAAAPwAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAAEwAAAC8SX9T+C4T7/wmh
        8f8KRpbiAAAARQAAAB8AAAADAAAABgAAAAcAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAA
        AAgAAAAHAAAABQAAAAUAAAARAAAALRJd0v4NhPj/Bqn5/wCl3/8LMHu2AAAAKQAAABAAAAAQAAAAGwAA
        ACMAAAAmAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAlAAAAHAAAABYAAAAkEl3R/QuE
        +/8Gqfn/AKbf/wsuerUAAAAoAAAADgAAAAUAAAApAAAAOAAAAEoAAABVAAAAWQAAAFoAAABaAAAAWgAA
        AFoAAABaAAAAWgAAAFoAAABVAAAARQAAADUTXND9C4T7/wWp+/8Ao97/Cy56sgAAACYAAAANAAAAAwAA
        AAFYcu/sWHHr7m2Q//9ylP//epn//3+d//+DoP//g6H//3yL5/+AfMH/gnu//3yH4v9YbtvyAAAAbQAA
        AFsXV7v/B6P0/wCi3f8LLnuvAAAAJQAAAA0AAAADAAAAAAAAAABbc/HqVGTQyoKj//+Do///jKv//6W9
        ///ZydX/zI1h/92lbP/xyZr/+daz/96rf/+wdlj/PzVHxRhSu/YHidT7C1Cj7w0xf6cAAAAcAAAACwAA
        AAMAAAAAAAAAAAAAAAAAAAAIUFuzm5Sw//+UsP//lLD//52Irv/Fg0///syC//3aqf/x1LD/68yv/+fM
        sv/uzaX/1plk/1iLk/8HNXHAAAAAPgAAABwAAAAIAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAEUlejdZ2z
        //9OUqL/TEya/7N3UP/Rp4T/VVOU/1VTlv9XVJj/0L24/826tv/RvLb/zKaC9sGATv4AAABlAAAAQwAA
        ABwAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ0eNXbbK//+yxP//pnFu/9Cge//RuK7/zry//8rA
        0P/Jw9r/ycTf/8rD1//IvMj/u5qG8M2ZXe6MUi3iAAAATAAAACIAAAAHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADOTp+T8fX//+8yP//oWhQ/9KrkP/Sv7z/0sPN/83H4f/HyPD/uL/0/7e45P+8t9H/tJiL78SU
        W9+lZjr7AAAATwAAACQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMjJ2SdLh//9VV6X/pmxP/9Su
        lP9YV5n/WFed/1dXov9UV6X/UlSl/6uw4/+0sNT/spSI7cCRWdyqaTr+AAAATAAAACIAAAAHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADNDR2Ttfk///o8P//qWxQ/9qwkf/n0MP/7Nva/+Pd8f/Q0f3/v8X7/7i6
        5/+4stH/sJB+6sSUW9+lZjr7AAAAQAAAABoAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEPj+AWM7Z
        ///HzfP/sHZl/9Cge//dw7T/28fH/9LE1P/ButX/tq7Q/7CnxP+9r8D/tI9u5M6ZXeyRVC7dAAAALgAA
        AA4AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFUFOTacnb//9ZXK//XFul/7p7Vf/ivKD/XFmd/1tY
        nv9XV53/V1ed/8m6xP/Aq63/v5Nl57N2SPwAAAA5AAAAGAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAHXGGmgbrO///n9P///////9u6r//Ehl//78qh/+jSw//WwcH/zrq2///fqf/MoX//r3NM/W42
        G6AAAAAdAAAACgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALaW24orzQ///Q4f//6/f//+v1
        ///ZxdD/q29Y/8iPbv/nwKf/4reY/8SGX/+JSjDsVCEOeQAAABkAAAAJAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAXdn7Hx73R//9XWa7/WVyv/1dbrv9XWa7/V1mu/1VVo/+ymbj/alJ5/1BC
        fvUAAAAtAAAAEgAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnkJ3i47fN
        ///X5P//+/////P+///M3f//xNX//8PW//+grfX/SEiY/AAAACoAAAARAAAABAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUpfP6jJro86G0//2muv/9rb3//a6///2pu//9o7b//pSl
        8fs0NYPWAAAAIAAAAA8AAAAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACUpfP6lKPx+5Oi8PyVpvT/k6Lw/JWm9P+TovD8k6Lw/AAAACoAAAAaAAAACgAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//8AA//+AAP//AAD//gAA//wAAAAA
        AAAAAAAAAAAAAAAAAwAAAAcAAAAPAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAPwAAAD8AAAB/AAAA
        /wAAAf8AAAP/AAAH/wA=
</value>
  </data>
</root>